<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mu-An Chiou - @muanchiou || @muan</title>
    <description></description>
    <link>http://muan.co</link>
    <atom:link href="http://muan.co/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Inheritance and prototype recap</title>
        <description>&lt;h2&gt;再回顾Object&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;An object is a container of properties, &amp;hellip; A property name can be any string, include the empty string. A property value can be any JavaScipt value except for &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Property name当然是string, 但是我这周的代码中就出现过在property中加number的情况。理论上这应该是一个syntax error, 但实际没有报错，最后应该是JavaScript将其转化成string。&lt;/p&gt;

&lt;p&gt;Property值不能是&lt;code&gt;undefined&lt;/code&gt;也可以这么说，当一个property还没有声明时，是不能使用它的（判断它是否存在例外）。想要获取一个未声明的property的property更是会引起js 报错。所以JavaScript在Object retrieval时经常使用两种技巧, 引自JavaScript: The Good Parts：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;|| 操作符用来定义默认值&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code&gt;var value = object[&quot;property&quot;] || &quot;defaultValue&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&amp;amp;&amp;amp; 操作符用来保护从&lt;code&gt;undefined&lt;/code&gt;中取值&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code&gt;if (object.someProperty &amp;amp;&amp;amp; object.someProperty.someValue) {}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;delete&lt;/h3&gt;

&lt;p&gt;delete只会删除object的property，不会触动object的prototype chain.&lt;/p&gt;

&lt;h2&gt;再回顾prototype&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;constructor必须是一个function。&lt;/li&gt;
&lt;li&gt;只有constructor才有一个属性&lt;code&gt;prototype&lt;/code&gt;指向自己的prototype, constructor的instance是没有的。在ECMA-262 fifth edition中，instace会有一个隐性指针[[Prototype]], 在现代浏览器中你可以通过&lt;code&gt;__proto__&lt;/code&gt;才获取。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 12 Jan 2014 11:36:00 +0000</pubDate>
        <link>http://muan.co/2014/01/12/inheritance-and-prototype-recap/</link>
        <guid isPermaLink="true">http://muan.co/2014/01/12/inheritance-and-prototype-recap/</guid>
      </item>
    
  </channel>
</rss>